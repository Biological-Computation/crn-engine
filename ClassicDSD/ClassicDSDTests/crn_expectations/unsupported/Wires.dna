directive duration 10000.0 points 1000
directive simulation cme
directive compilation infinite

directive leaks
directive leak 1.0E-9*c
directive tau 1.0 (* Branch migraTon rate 1/s (from Zhang and Winfree 2009)*)

(* Plots the reporter strand's concentration *)
directive plot <ra rb>

(* Define parameters *)
directive parameters [ length=0.0; c=50.0 ]
directive sweep length = [0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0]

(* Binary Conversion *)
def num = 2.0**length
def x0 = int_of_float((num+1.0)/2.0) - int_of_float (num/2.0)
def x1 = int_of_float(((num/2.0**1.0)+1.0)/2.0) - int_of_float(num/2.0**2.0)
def x2 = int_of_float(((num/2.0**2.0)+1.0)/2.0) - int_of_float(num/2.0**3.0)
def x3 = int_of_float(((num/2.0**3.0)+1.0)/2.0) - int_of_float(num/2.0**4.0)
def x4 = int_of_float(((num/2.0**4.0)+1.0)/2.0) - int_of_float(num/2.0**5.0)
def x5 = int_of_float(((num/2.0**5.0)+1.0)/2.0) - int_of_float(num/2.0**6.0)
def x6 = int_of_float(((num/2.0**6.0)+1.0)/2.0) - int_of_float(num/2.0**7.0)
def x7 = int_of_float(((num/2.0**7.0)+1.0)/2.0) - int_of_float(num/2.0**8.0)
def x8 = int_of_float(((num/2.0**8.0)+1.0)/2.0) - int_of_float(num/2.0**9.0)
def x9 = int_of_float(((num/2.0**9.0)+1.0)/2.0) - int_of_float(num/2.0**10.0)

(* Winfree's parameters*)
def bind = 5.0E-5 (* Short toehold binding rate constant 5x10^-5/nM/s *)
def unbind = 26.0 (* Short toehold dissociation rate constant 26/s *)

def STRAND (T, sa, sb) = <T^ sa sb>
def WIRE (T, Inputa, Inputb, To, Outputa, Outputb) = ({T^*}[Inputa]:[Inputb To^]<Outputa Outputb>)
def REPORTER (T, Inputa, Inputb) =  {T^*}[Inputa Inputb]

new T @ c * bind, unbind

def WIRES0() =
( STRAND(T, ra, rb)
| REPORTER(T, ra, rb) )

def WIRES1() = 
( STRAND(T, aa, ab)
| WIRE(T, aa, ab, T, ra, rb)
| REPORTER(T, ra, rb) )

def WIRES2() =
( STRAND(T, aa, ab)
| WIRE(T, aa, ab, T, ba, bb)
| WIRE(T, ba, bb, T, ra, rb)
| REPORTER(T, ra, rb) )

def WIRES3() =
( STRAND(T, aa, ab)
| WIRE(T, aa, ab, T, ba, bb)
| WIRE(T, ba, bb, T, ca, cb)
| WIRE(T, ca, cb, T, ra, rb)
| REPORTER(T, ra, rb) )

def WIRES4() =
( STRAND(T, aa, ab)
| WIRE(T, aa, ab, T, ba, bb)
| WIRE(T, ba, bb, T, ca, cb)
| WIRE(T, ca, cb, T, da, db)
| WIRE(T, da, db, T, ra, rb)
| REPORTER(T, ra, rb) )

def WIRES5() =
( STRAND(T, aa, ab)
| WIRE(T, aa, ab, T, ba, bb)
| WIRE(T, ba, bb, T, ca, cb)
| WIRE(T, ca, cb, T, da, db)
| WIRE(T, da, db, T, ea, eb)
| WIRE(T, ea, eb, T, ra, rb)
| REPORTER(T, ra, rb) )

def WIRES6() =
( STRAND(T, aa, ab)
| WIRE(T, aa, ab, T, ba, bb)
| WIRE(T, ba, bb, T, ca, cb)
| WIRE(T, ca, cb, T, da, db)
| WIRE(T, da, db, T, ea, eb)
| WIRE(T, ea, eb, T, fa, fb)
| WIRE(T, fa, fb, T, ra, rb)
| REPORTER(T, ra, rb) )

def WIRES7() =
( STRAND(T, aa, ab)
| WIRE(T, aa, ab, T, ba, bb)
| WIRE(T, ba, bb, T, ca, cb)
| WIRE(T, ca, cb, T, da, db)
| WIRE(T, da, db, T, ea, eb)
| WIRE(T, ea, eb, T, fa, fb)
| WIRE(T, fa, fb, T, ga, gb)
| WIRE(T, ga, gb, T, ra, rb)
| REPORTER(T, ra, rb) )

def WIRES8() =
( STRAND(T, aa, ab)
| WIRE(T, aa, ab, T, ba, bb)
| WIRE(T, ba, bb, T, ca, cb)
| WIRE(T, ca, cb, T, da, db)
| WIRE(T, da, db, T, ea, eb)
| WIRE(T, ea, eb, T, fa, fb)
| WIRE(T, fa, fb, T, ga, gb)
| WIRE(T, ga, gb, T, ha, hb)
| WIRE(T, ha, hb, T, ra, rb)
| REPORTER(T, ra, rb) )

def WIRES9() =
( STRAND(T, aa, ab)
| WIRE(T, aa, ab, T, ba, bb)
| WIRE(T, ba, bb, T, ca, cb)
| WIRE(T, ca, cb, T, da, db)
| WIRE(T, da, db, T, ea, eb)
| WIRE(T, ea, eb, T, fa, fb)
| WIRE(T, fa, fb, T, ga, gb)
| WIRE(T, ga, gb, T, ha, hb)
| WIRE(T, ha, hb, T, ia, ib)
| WIRE(T, ia, ib, T, ra, rb)
| REPORTER(T, ra, rb) )

( x0 * WIRES0()
| x1 * WIRES1()
| x2 * WIRES2()
| x3 * WIRES3()
| x4 * WIRES4()
| x5 * WIRES5()
| x6 * WIRES6()
| x7 * WIRES7()
| x8 * WIRES8()
| x9 * WIRES9() )